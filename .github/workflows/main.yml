name: Build Magisk phh

on:
  push:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build-Magisk
      run: |
        curl https://api.host.mintimate.cn/fileHost/public/download/1loKhTLDA3O -o app-debug.apk
        unzip app-debug.apk
        rm -rf assets/boot_patch.sh
        mv boot_patch.sh assets/boot_patch.sh 
        zip -r app-debug-phh.zip ./ -x '*.apk'
  
    - name: Copy release file
      run: |
        mkdir release
        cp -r app-debug-phh.zip release
        
    - name: Save build file to artifact
      uses: actions/upload-artifact@v2
      with:
        name: release
        path: release/*
        
    - name : Date
      id: date
      run: echo "::set-output name=date::$(date +"%d-%m-%Y")"

    - name: Create Release
      id: create_release 
      uses: actions/create-release@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NTAG_NAME: ${{ steps.date.outputs.date }}
      with:
          tag_name: ${{ steps.date.outputs.date }}
          release_name: Release ${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

    - name: Upload Release Magisk PHH
      id: upload-release-magisk-phh
      uses: actions/upload-release-asset@v1
      env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./release/app-debug-phh.zip
          asset_name: app-debug-phh.zip
          asset_content_type: application/octet-stream
